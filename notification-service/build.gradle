plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'club.gach-dong'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

jib {
	def activeProfile = System.getenv("SPRING_PROFILES_ACTIVE")
	def imageName = System.getenv("IMAGE_NAME")
	def imageTag = System.getenv("IMAGE_TAG")
	def serverPort = System.getenv("SERVER_PORT") ?: "8080"

	from {
		image = "amazoncorretto:17-alpine3.17-jdk"
	}
	to {
		image = imageName
		tags = [imageTag, "latest"]
	}

	container {
		jvmFlags = [
				"-Dspring.profiles.active=${activeProfile}",
				"-Dserver.port=${serverPort}",
				"-Djava.security.egd=file:/dev/./urandom",
				"-Dfile.encoding=UTF-8",
				"-Duser.timezone=Asia/Seoul",
				"-XX:+UnlockExperimentalVMOptions",
				"-XX:+UseContainerSupport",
				"-XX:+UseG1GC",  // 필요 시 UseSerialGC로 변경 가능
				"-XX:InitialHeapSize=256m",  // 힙 사이즈를 더 낮게 설정
				"-XX:MaxHeapSize=512m",      // 최대 힙 사이즈도 조정
				"-XX:+DisableExplicitGC",
				"-server"
		]
		ports = [serverPort]
	}
}